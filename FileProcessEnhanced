import os
import shutil
import pandas as pd
import re

# Initialize an empty DataFrame with the desired columns
columns = ["CardNumber", "LocalDate", "LocalTime", "Status", "Name", "CriteriaUsed"]
data_frame = pd.DataFrame(columns=columns)

# File paths
data_file_path = "your_file.txt"
destination_directory = "your_chosen_directory"

# Function to process the data file
def read_data_file(data_file_path):
    card_number = ""
    local_date = ""
    local_time = ""
    status = ""
    name = ""
    criteria_used = ""
    
    start_reading = False
    stop_reading = False

    with open(data_file_path, "r") as file:
        for line in file:
            line = line.strip()

            # Start reading after '---'
            if "---" in line:
                start_reading = True
                continue

            # Stop reading after 'PAGE' or 'totals'
            if "PAGE" in line or "totals" in line:
                stop_reading = True
                break

            # Continue only if we're in the relevant part of the file
            if not start_reading or stop_reading:
                continue

            # Search for 17-digit number
            card_match = re.search(r'\b\d{17}\b', line)
            if card_match:
                card_number = card_match.group(0)

            # Search for date in the format dd/mm/yyyy
            date_match = re.search(r'\b\d{2}/\d{2}/\d{4}\b', line)
            if date_match:
                local_date = date_match.group(0)

            # Search for time in the format HH:MM:SS
            time_match = re.search(r'\b\d{2}:\d{2}:\d{2}\b', line)
            if time_match:
                local_time = time_match.group(0)
                status = line[68:80].strip()  # Extract index 68 to 80 as Status
            
            # If there is no 17-digit number, capture the whole line as 'Name'
            if not card_match:
                name = line

            # Once all values are captured, store them in the DataFrame
            if card_number and local_date and local_time:
                data = {
                    "CardNumber": card_number,
                    "LocalDate": local_date,
                    "LocalTime": local_time,
                    "Status": status,
                    "Name": name,
                    "CriteriaUsed": criteria_used
                }
                data_frame.loc[len(data_frame)] = data

                # Reset variables for the next row
                card_number = ""
                local_date = ""
                local_time = ""
                status = ""
                name = ""
                criteria_used = ""

def export_to_csv(data_frame, csv_data_file_path):
    data_frame.to_csv(csv_data_file_path, index=False)

def move_file(source_path, destination_directory):
    if os.path.exists(source_path) and os.path.exists(destination_directory):
        shutil.move(source_path, destination_directory)
        print(f"File moved to {destination_directory}")

# Step 1: Read the data and process it
read_data_file(data_file_path)

# Step 2: Export the data to a CSV file
csv_data_file_path = "output.csv"
export_to_csv(data_frame, csv_data_file_path)

# Step 3: Move the data file to a chosen directory
move_file(data_file_path, destination_directory)
